// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(uuid())
  email       String      @unique
  name        String?
  password    String
  isAdmin     Boolean     @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  deletedAt   DateTime?
  activetedAt DateTime?
  preference  Preference?
  dashboard   Dashboard[]

  @@map("users")
}

model Dashboard {
  id         String      @id @default(uuid())
  name       String
  column     Int         @default(12)
  row        Int         @default(12)
  margin     Int         @default(10)
  user_id    String
  user       User        @relation(fields: [user_id], references: [id])
  preference Preference?
  grid_items GridItem[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  @@map("dashboards")
}

model Preference {
  id                   String    @id @default(uuid())
  user_id              String    @unique
  user                 User      @relation(fields: [user_id], references: [id])
  dashboard_default_id String    @unique
  dashboard            Dashboard @relation(fields: [dashboard_default_id], references: [id])
  language             String    @default("en")
  isDark               Boolean   @default(false)
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt

  @@map("preferences")
}

model WidgetCategory {
  id        String   @id @default(uuid())
  name      String
  icon      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  widget    Widget[]

  @@map("widget_categories")
}

model Widget {
  id                 String          @id @default(uuid())
  name               String
  description        String?
  icon               String          @default("info")
  widget_category_id String?
  widget_category    WidgetCategory? @relation(fields: [widget_category_id], references: [id])
  component          String
  min_width          Int             @default(1)
  min_height         Int             @default(1)
  max_width          Int             @default(12)
  max_height         Int             @default(8)
  grid_items         GridItem[]
  createdAt          DateTime        @default(now())
  updatedAt          DateTime        @updatedAt

  @@map("widgets")
}

model GridItem {
  id           String    @id @default(uuid())
  axis_x       Int
  axis_y       Int
  width        Int
  height       Int
  content      String
  dashboard_id String
  dashboard    Dashboard @relation(fields: [dashboard_id], references: [id])
  widget_id    String
  widget       Widget    @relation(fields: [widget_id], references: [id])
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@map("grid_items")
}
